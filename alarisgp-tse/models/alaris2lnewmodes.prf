(alaris_th
 (IMP_pump_th_TCC1 0
  (IMP_pump_th_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (IMP_pump_th_TCC2 0
  (IMP_pump_th_TCC2-1 nil 3710576304 ("" (assuming-tcc) nil nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (IMP_pump_th_TCC3 0
  (IMP_pump_th_TCC3-1 nil 3710576304 ("" (assuming-tcc) nil nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (IMP_pump_th_TCC4 0
  (IMP_pump_th_TCC4-1 nil 3710576304 ("" (assuming-tcc) nil nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (decrement_TCC1 0
  (decrement_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (delta type-eq-decl nil types_and_constants_th nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil))
   nil))
 (trim_rate_TCC1 0
  (trim_rate_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (trim_vtbi_TCC1 0
  (trim_vtbi_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (trim_time_TCC1 0
  (trim_time_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (init?_TCC1 0
  (init?_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (init? const-decl "bool" pump_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC2 0
  (init?_TCC2-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC3 0
  (init?_TCC3-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC4 0
  (init?_TCC4-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC5 0
  (init?_TCC5-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC6 0
  (init?_TCC6-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC7 0
  (init?_TCC7-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC8 0
  (init?_TCC8-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC9 0
  (init?_TCC9-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC10 0
  (init?_TCC10-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC11 0
  (init?_TCC11-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC12 0
  (init?_TCC12-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC13 0
  (init?_TCC13-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC14 0
  (init?_TCC14-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC15 0
  (init?_TCC15-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC16 0
  (init?_TCC16-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC17 0
  (init?_TCC17-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC18 0
  (init?_TCC18-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC19 0
  (init?_TCC19-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (init?_TCC20 0
  (init?_TCC20-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (release_key_TCC1 0
  (release_key_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil))
   nil))
 (release_key_TCC2 0
  (release_key_TCC2-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil))
   nil))
 (switch_from_battery_low_TCC1 0
  (switch_from_battery_low_TCC1-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (imid_type type-eq-decl nil types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil))
   nil))
 (switch_from_battery_low_TCC2 0
  (switch_from_battery_low_TCC2-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (imid_type type-eq-decl nil types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil))
   nil))
 (switch_from_battery_low_TCC3 0
  (switch_from_battery_low_TCC3-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil) nil nil))
 (switch_TCC1 0
  (switch_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_switch const-decl "boolean" alaris_th nil))
   nil))
 (on_case_infusionstatusblank_TCC1 0
  (on_case_infusionstatusblank_TCC1-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (imid_type type-eq-decl nil types_and_constants_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil))
   nil))
 (on_case_infusionstatusNOTblank_TCC1 0
  (on_case_infusionstatusNOTblank_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (on_TCC1 0
  (on_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (on_TCC2 0
  (on_TCC2-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (run_cond_NZ_TCC1 0
  (run_cond_NZ_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (per_start const-decl "bool" pump_th nil))
   nil))
 (run_TCC1 0
  (run_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (per_start const-decl "bool" pump_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (run_TCC2 0
  (run_TCC2-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (per_start const-decl "bool" pump_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (pause_TCC1 0
  (pause_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (imid_type type-eq-decl nil types_and_constants_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (per_pause const-decl "bool" pump_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil))
   nil))
 (query_TCC1 0
  (query_TCC1-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (dlock const-decl "nat" types_and_constants_th nil))
   nil))
 (query_TCC2 0
  (query_TCC2-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (dlock const-decl "nat" types_and_constants_th nil))
   nil))
 (query_TCC3 0
  (query_TCC3-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil))
   nil))
 (query_TCC4 0
  (query_TCC4-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil))
   nil))
 (query_TCC5 0
  (query_TCC5-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil))
   nil))
 (per_tick_TCC1 0
  (per_tick_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_tick_TCC2 0
  (per_tick_TCC2-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_tick_TCC3 0
  (per_tick_TCC3-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_tick_TCC4 0
  (per_tick_TCC4-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_tick_TCC5 0
  (per_tick_TCC5-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_tick_TCC6 0
  (per_tick_TCC6-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_tick_TCC7 0
  (per_tick_TCC7-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (drate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_tick_TCC8 0
  (per_tick_TCC8-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (per_tick_TCC9 0
  (per_tick_TCC9-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (per_tick_TCC10 0
  (per_tick_TCC10-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (per_tick_TCC11 0
  (per_tick_TCC11-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_tick_TCC12 0
  (per_tick_TCC12-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (per_tick_TCC13 0
  (per_tick_TCC13-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (tick_case_holding_volume_etc_elapseLTtimeout_TCC1 0
  (tick_case_holding_volume_etc_elapseLTtimeout_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil) nil nil))
 (tick_case_holding_volume_etc_elapseLTtimeoutlocked_TCC1 0
  (tick_case_holding_volume_etc_elapseLTtimeoutlocked_TCC1-1 nil
   3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (pausetime type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (imid_type type-eq-decl nil types_and_constants_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil))
   nil))
 (tick_case_holding_volume_etc_elapseLTtimeoutlocked_TCC2 0
  (tick_case_holding_volume_etc_elapseLTtimeoutlocked_TCC2-1 nil
   3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (pausetime type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (tick_TCC1 0
  (tick_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (tick_TCC2 0
  (tick_TCC2-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (tick_TCC3 0
  (tick_TCC3-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (tick_TCC4 0
  (tick_TCC4-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (tick_TCC5 0
  (tick_TCC5-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (tick_TCC6 0
  (tick_TCC6-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (per_tick const-decl "boolean" pump_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (tick_TCC7 0
  (tick_TCC7-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (tick_TCC8 0
  (tick_TCC8-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (tick_TCC9 0
  (tick_TCC9-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (/= const-decl "boolean" notequal nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (tick_TCC10 0
  (tick_TCC10-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (tick_TCC11 0
  (tick_TCC11-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (tick_TCC12 0
  (tick_TCC12-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (per_tick const-decl "boolean" pump_th nil))
   nil))
 (tick_TCC13 0
  (tick_TCC13-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (per_tick const-decl "boolean" pump_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (tick_TCC14 0
  (tick_TCC14-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (per_key1_TCC1 0
  (per_key1_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_key1_TCC2 0
  (per_key1_TCC2-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_key1_TCC3 0
  (per_key1_TCC3-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_key1_TCC4 0
  (per_key1_TCC4-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_key1_TCC5 0
  (per_key1_TCC5-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_key1_TCC6 0
  (per_key1_TCC6-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_key1_TCC7 0
  (per_key1_TCC7-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil))
   nil))
 (per_key1_TCC8 0
  (per_key1_TCC8-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil))
   nil))
 (per_key1_TCC9 0
  (per_key1_TCC9-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil))
   nil))
 (key1_case_dispvtbi_vtmode_TCC1 0
  (key1_case_dispvtbi_vtmode_TCC1-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil))
   nil))
 (key1_case_dispvtbi_vtmode_TCC2 0
  (key1_case_dispvtbi_vtmode_TCC2-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (imid_type type-eq-decl nil types_and_constants_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil))
   nil))
 (key1_case_dispvtbi_vtmode_TCC3 0
  (key1_case_dispvtbi_vtmode_TCC3-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key1_case_dispvtbi_vtmode_TCC4 0
  (key1_case_dispvtbi_vtmode_TCC4-1 nil 3710576304
   ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key1_case_dispvtbi_bagmode_TCC1 0
  (key1_case_dispvtbi_bagmode_TCC1-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (key1_case_dispvtbi_bagmode_TCC2 0
  (key1_case_dispvtbi_bagmode_TCC2-1 nil 3710576304
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (even? const-decl "bool" integers nil)
    (odd? const-decl "bool" integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil))
   nil))
 (key1_case_dispvtbi_tbagmode_TCC1 0
  (key1_case_dispvtbi_tbagmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key1_case_dispvtbi_tbagmode_TCC2 0
  (key1_case_dispvtbi_tbagmode_TCC2-1 nil 3710576304
   ("" (skosimp*)
    (("" (lemma "vtbi_over_time_lemma") (("" (grind) nil nil)) nil))
    nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vtbi_over_time_lemma formula-decl nil pump_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (st!1 skolem-const-decl "(per_key1)" alaris_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil))
 (key1_case_options_dlock_TCC1 0
  (key1_case_options_dlock_TCC1-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key1_TCC1 0
  (key1_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil))
   nil))
 (key1_TCC2 0
  (key1_TCC2-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil))
   nil))
 (key1_TCC3 0
  (key1_TCC3-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil))
   nil))
 (key1_TCC4 0
  (key1_TCC4-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key1_TCC5 0
  (key1_TCC5-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (per_key2_TCC1 0
  (per_key2_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil))
   nil))
 (key2_case_volume_TCC1 0
  (key2_case_volume_TCC1-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil))
   nil))
 (key2_case_volume_TCC2 0
  (key2_case_volume_TCC2-1 nil 3710576304
   ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil))
   nil))
 (key2_case_volume_TCC3 0
  (key2_case_volume_TCC3-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (imid_type type-eq-decl nil types_and_constants_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil))
   nil))
 (key2_case_volume_TCC4 0
  (key2_case_volume_TCC4-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key2_case_volume_TCC5 0
  (key2_case_volume_TCC5-1 nil 3710576304
   ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key2_TCC1 0
  (key2_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil))
   nil))
 (key2_TCC2 0
  (key2_TCC2-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil))
   nil))
 (per_key3_TCC1 0
  (per_key3_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (key3_case_attention_clearsetup_TCC1 0
  (key3_case_attention_clearsetup_TCC1-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (imid_type type-eq-decl nil types_and_constants_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil))
   nil))
 (key3_case_volume_TCC1 0
  (key3_case_volume_TCC1-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil))
   nil))
 (key3_case_volume_TCC2 0
  (key3_case_volume_TCC2-1 nil 3710576304
   ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil))
   nil))
 (key3_case_volume_TCC3 0
  (key3_case_volume_TCC3-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (imid_type type-eq-decl nil types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil))
   nil))
 (key3_case_volume_TCC4 0
  (key3_case_volume_TCC4-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil))
   nil))
 (key3_case_volume_TCC5 0
  (key3_case_volume_TCC5-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key3_case_volume_TCC6 0
  (key3_case_volume_TCC6-1 nil 3710576304
   ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key3_case_dispvtbi_vtmode_TCC1 0
  (key3_case_dispvtbi_vtmode_TCC1-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil))
   nil))
 (key3_case_dispvtbi_vtmode_TCC2 0
  (key3_case_dispvtbi_vtmode_TCC2-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (imid_type type-eq-decl nil types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil))
   nil))
 (key3_case_dispvtbi_vtmode_TCC3 0
  (key3_case_dispvtbi_vtmode_TCC3-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key3_case_dispvtbi_vtmode_TCC4 0
  (key3_case_dispvtbi_vtmode_TCC4-1 nil 3710576304
   ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key3_case_optionsORdispinfo_TCC1 0
  (key3_case_optionsORdispinfo_TCC1-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key3_case_optionsORdispinfo_TCC2 0
  (key3_case_optionsORdispinfo_TCC2-1 nil 3710576304
   ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key3_TCC1 0
  (key3_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key3_TCC2 0
  (key3_TCC2-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (key3_TCC3 0
  (key3_TCC3-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil))
   nil))
 (key3_TCC4 0
  (key3_TCC4-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (per_chevron_TCC1 0
  (per_chevron_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_chevron_TCC2 0
  (per_chevron_TCC2-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_chevron_TCC3 0
  (per_chevron_TCC3-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_chevron_TCC4 0
  (per_chevron_TCC4-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_chevron_TCC5 0
  (per_chevron_TCC5-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_chevron_TCC6 0
  (per_chevron_TCC6-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_chevron_TCC7 0
  (per_chevron_TCC7-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_chevron_TCC8 0
  (per_chevron_TCC8-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_chevron_TCC9 0
  (per_chevron_TCC9-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (per_chevron_TCC10 0
  (per_chevron_TCC10-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dnewrate const-decl "nat" types_and_constants_th nil))
   nil))
 (fup_case_holding_NOTrlock_TCC1 0
  (fup_case_holding_NOTrlock_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil))
   nil))
 (fup_case_dispvtbi_vtmode_TCC1 0
  (fup_case_dispvtbi_vtmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil))
   nil))
 (fup_case_vtbitime_vttmode_TCC1 0
  (fup_case_vtbitime_vttmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil))
   nil))
 (fup_case_vtbitime_vttmode_TCC2 0
  (fup_case_vtbitime_vttmode_TCC2-1 nil 3710576304
   ("" (skosimp*)
    (("" (lemma "vtbi_over_time_lemma") (("" (grind) nil nil)) nil))
    nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vtbi_over_time_lemma formula-decl nil pump_th nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (integer nonempty-type-from-decl nil integers nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (d!1 skolem-const-decl "presstime
    [maxrate, maxinfuse, infusemin, timeout, shorttimeout, maxtime,
     bat_max, bat_min]" alaris_th nil)
    (st!1 skolem-const-decl "(per_fup)" alaris_th nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (posint_times_posint_is_posint application-judgement "posint"
     integers nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (state_UP_time_TCC1 0
  (state_UP_time_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (fup_case_vtbitime_ttmode_TCC1 0
  (fup_case_vtbitime_ttmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil))
   nil))
 (fup_case_vtbitime_ttmode_TCC2 0
  (fup_case_vtbitime_ttmode_TCC2-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil))
 (fup_case_vtbitime_ttmode_TCC3 0
  (fup_case_vtbitime_ttmode_TCC3-1 nil 3710576304
   ("" (skosimp*)
    (("" (lemma "vtbi_over_time_lemma") (("" (grind) nil nil)) nil))
    nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vtbi_over_time_lemma formula-decl nil pump_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integer nonempty-type-from-decl nil integers nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (d!1 skolem-const-decl "presstime
    [maxrate, maxinfuse, infusemin, timeout, shorttimeout, maxtime,
     bat_max, bat_min]" alaris_th nil)
    (st!1 skolem-const-decl "(per_fup)" alaris_th nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (fup_case_dispvtbi_bagmode_TCC1 0
  (fup_case_dispvtbi_bagmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (fup_case_options_TCC1 0
  (fup_case_options_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil))
   nil))
 (fup_TCC1 0
  (fup_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (fup_TCC2 0
  (fup_TCC2-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (sup_case_vtbitime_vttmode_TCC1 0
  (sup_case_vtbitime_vttmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (sup_case_vtbitime_vttmode_TCC2 0
  (sup_case_vtbitime_vttmode_TCC2-1 nil 3710576304
   ("" (skosimp*)
    (("" (lemma "vtbi_over_time_lemma") (("" (grind) nil nil)) nil))
    nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vtbi_over_time_lemma formula-decl nil pump_th nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (integer nonempty-type-from-decl nil integers nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (per_sup const-decl "bool" alaris_th nil)
    (state type-eq-decl nil alaris_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil))
 (sup_case_vtbitime_ttmode_TCC1 0
  (sup_case_vtbitime_ttmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil))
   nil))
 (sup_case_vtbitime_ttmode_TCC2 0
  (sup_case_vtbitime_ttmode_TCC2-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil))
 (sup_case_vtbitime_ttmode_TCC3 0
  (sup_case_vtbitime_ttmode_TCC3-1 nil 3710576304
   ("" (skosimp*)
    (("" (lemma "vtbi_over_time_lemma") (("" (grind) nil nil)) nil))
    nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vtbi_over_time_lemma formula-decl nil pump_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integer nonempty-type-from-decl nil integers nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (d!1 skolem-const-decl "presstime
    [maxrate, maxinfuse, infusemin, timeout, shorttimeout, maxtime,
     bat_max, bat_min]" alaris_th nil)
    (st!1 skolem-const-decl "{st: state | per_sup(st)}" alaris_th nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (sup_case_dispvtbi_bagmode_TCC1 0
  (sup_case_dispvtbi_bagmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (sup_case_dispvtbi_bagmode_TCC2 0
  (sup_case_dispvtbi_bagmode_TCC2-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (sup_case_dispvtbi_bagmode_TCC3 0
  (sup_case_dispvtbi_bagmode_TCC3-1 nil 3710576304
   ("" (cond-coverage-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (sup_case_options_TCC1 0
  (sup_case_options_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil))
   nil))
 (sup_case_options_TCC2 0
  (sup_case_options_TCC2-1 nil 3710576304
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (odd? const-decl "bool" integers nil)
    (even? const-decl "bool" integers nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (sup_TCC1 0
  (sup_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (sup_TCC2 0
  (sup_TCC2-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (fdown_case_holding_NOTrlock_TCC1 0
  (fdown_case_holding_NOTrlock_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil))
   nil))
 (fdown_case_holding_NOTrlock_TCC2 0
  (fdown_case_holding_NOTrlock_TCC2-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil))
   nil))
 (fdown_case_dispvtbi_vtmode_TCC1 0
  (fdown_case_dispvtbi_vtmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil))
   nil))
 (fdown_case_dispvtbi_vtmode_TCC2 0
  (fdown_case_dispvtbi_vtmode_TCC2-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil))
   nil))
 (fdown_case_vtbitime_vttmode_TCC1 0
  (fdown_case_vtbitime_vttmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil))
   nil))
 (fdown_case_vtbitime_vttmode_TCC2 0
  (fdown_case_vtbitime_vttmode_TCC2-1 nil 3710576304
   ("" (skosimp*)
    (("" (lemma "vtbi_over_time_lemma") (("" (grind) nil nil)) nil))
    nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vtbi_over_time_lemma formula-decl nil pump_th nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integer nonempty-type-from-decl nil integers nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (d!1 skolem-const-decl "presstime
    [maxrate, maxinfuse, infusemin, timeout, shorttimeout, maxtime,
     bat_max, bat_min]" alaris_th nil)
    (st!1 skolem-const-decl "(per_fdown)" alaris_th nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (posint_times_posint_is_posint application-judgement "posint"
     integers nil)
    (rat_minus_rat_is_rat application-judgement "rat" rationals nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil))
   nil))
 (fdown_case_vtbitime_ttmode_TCC1 0
  (fdown_case_vtbitime_ttmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil))
   nil))
 (fdown_case_vtbitime_ttmode_TCC2 0
  (fdown_case_vtbitime_ttmode_TCC2-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil))
 (fdown_case_vtbitime_ttmode_TCC3 0
  (fdown_case_vtbitime_ttmode_TCC3-1 nil 3710576304
   ("" (skosimp*)
    (("" (lemma "vtbi_over_time_lemma") (("" (grind) nil nil)) nil))
    nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vtbi_over_time_lemma formula-decl nil pump_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integer nonempty-type-from-decl nil integers nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (d!1 skolem-const-decl "presstime
    [maxrate, maxinfuse, infusemin, timeout, shorttimeout, maxtime,
     bat_max, bat_min]" alaris_th nil)
    (st!1 skolem-const-decl "(per_fdown)" alaris_th nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (fdown_case_dispvtbi_bagmode_TCC1 0
  (fdown_case_dispvtbi_bagmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (mbags const-decl "nat" types_and_constants_th nil))
   nil))
 (fdown_case_options_TCC1 0
  (fdown_case_options_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil))
   nil))
 (fdown_case_options_TCC2 0
  (fdown_case_options_TCC2-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil))
   nil))
 (fdown_case_options_TCC3 0
  (fdown_case_options_TCC3-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil))
   nil))
 (fdown_case_options_TCC4 0
  (fdown_case_options_TCC4-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil))
   nil))
 (fdown_case_options_TCC5 0
  (fdown_case_options_TCC5-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (dlock const-decl "nat" types_and_constants_th nil))
   nil))
 (fdown_case_options_TCC6 0
  (fdown_case_options_TCC6-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (fdown_TCC1 0
  (fdown_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (fdown_TCC2 0
  (fdown_TCC2-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (state_dn_rate_TCC1 0
  (state_dn_rate_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (sdown_case_vtbitime_vttmode_TCC1 0
  (sdown_case_vtbitime_vttmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (sdown_case_vtbitime_vttmode_TCC2 0
  (sdown_case_vtbitime_vttmode_TCC2-1 nil 3710576304
   ("" (skosimp*)
    (("" (lemma "vtbi_over_time_lemma") (("" (grind) nil nil)) nil))
    nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vtbi_over_time_lemma formula-decl nil pump_th nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integer nonempty-type-from-decl nil integers nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (st!1 skolem-const-decl "(per_sdown)" alaris_th nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil))
 (sdown_case_vtbitime_ttmode_TCC1 0
  (sdown_case_vtbitime_ttmode_TCC1-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil))
   nil))
 (sdown_case_vtbitime_ttmode_TCC2 0
  (sdown_case_vtbitime_ttmode_TCC2-1 nil 3710576304
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil))
 (sdown_case_vtbitime_ttmode_TCC3 0
  (sdown_case_vtbitime_ttmode_TCC3-1 nil 3710576304
   ("" (skosimp*)
    (("" (lemma "vtbi_over_time_lemma") (("" (grind) nil nil)) nil))
    nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vtbi_over_time_lemma formula-decl nil pump_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integer nonempty-type-from-decl nil integers nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (d!1 skolem-const-decl "presstime
    [maxrate, maxinfuse, infusemin, timeout, shorttimeout, maxtime,
     bat_max, bat_min]" alaris_th nil)
    (st!1 skolem-const-decl "(per_sdown)" alaris_th nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (sdown_case_dispvtbi_bagmode_TCC1 0
  (sdown_case_dispvtbi_bagmode_TCC1-1 nil 3710576304
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (pred type-eq-decl nil defined_types nil)
    (total_order? const-decl "bool" orders nil)
    (<= const-decl "bool" reals nil)
    (odd? const-decl "bool" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (> const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (even? const-decl "bool" integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (strict_total_order? const-decl "bool" orders nil)
    (irreflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (strict_order? const-decl "bool" orders nil)
    (trichotomous? const-decl "bool" orders nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (reflexive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (sdown_case_dispvtbi_bagmode_TCC2 0
  (sdown_case_dispvtbi_bagmode_TCC2-1 nil 3710576304
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil))
   nil))
 (sdown_case_dispvtbi_bagmode_TCC3 0
  (sdown_case_dispvtbi_bagmode_TCC3-1 nil 3710576304
   ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (sdown_case_options_TCC1 0
  (sdown_case_options_TCC1-1 nil 3710576304 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (dlock const-decl "nat" types_and_constants_th nil))
   nil))
 (sdown_case_options_TCC2 0
  (sdown_case_options_TCC2-1 nil 3710576304
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (optionblank adt-constructor-decl "(optionblank?)"
     types_and_constants_th nil)
    (optionblank? adt-recognizer-decl "[option_tags -> boolean]"
     types_and_constants_th nil)
    (option_tags type-decl nil types_and_constants_th nil)
    (odd? const-decl "bool" integers nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (strict_total_order? const-decl "bool" orders nil)
    (irreflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (strict_order? const-decl "bool" orders nil)
    (trichotomous? const-decl "bool" orders nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (reflexive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (sdown_TCC1 0
  (sdown_TCC1-1 nil 3710576304 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (sdown_TCC2 0
  (sdown_TCC2-1 nil 3710576304 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_th nil)
    (maxinfuse formal-const-decl "posnat" alaris_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil)
    (timeout formal-const-decl "posnat" alaris_th nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_th nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_th nil)
    (ibagscursor type-eq-decl nil types_and_constants_th nil)
    (abags type-eq-decl nil types_and_constants_th nil)
    (steprate type-eq-decl nil types_and_constants_th nil)
    (steptime type-eq-decl nil types_and_constants_th nil)
    (stepvol type-eq-decl nil types_and_constants_th nil)
    (pump type-eq-decl nil pump_th nil)
    (emodes type-decl nil types_and_constants_th nil)
    (ifunctions type-decl nil types_and_constants_th nil)
    (imid type-eq-decl nil types_and_constants_th nil)
    (irates type-eq-decl nil types_and_constants_th nil)
    (itimes type-eq-decl nil types_and_constants_th nil)
    (ivols type-eq-decl nil types_and_constants_th nil)
    (o_menu type-eq-decl nil types_and_constants_th nil)
    (presstime type-eq-decl nil types_and_constants_th nil)
    (qcurse type-eq-decl nil types_and_constants_th nil)
    (iline type-decl nil types_and_constants_th nil)
    (chev_buttons type-decl nil types_and_constants_th nil)
    (state type-eq-decl nil alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil)))

