(alaris_consistency_pattern
 (consistency_entrymode_theorem_nochevrons 0
  (consistency_entrymode_theorem_nochevrons-1 nil 3709529236
   ("" (grind) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2 const-decl "state" alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (query const-decl "state" alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (run_cond_NZ const-decl "state" alaris_th nil)
    (run_check_rlock const-decl "state" alaris_th nil)
    (run_cond_vtbi0_kvoflag const-decl "state" alaris_th nil)
    (run_cond_vtbi0_NOTkvoflag const-decl "state" alaris_th nil)
    (run_cond_setnotfitted const-decl "state" alaris_th nil)
    (run const-decl "state" alaris_th nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (pause const-decl "pump" pump_th nil)
    (pause const-decl "state" alaris_th nil)
    (state_transitions_nochevrons const-decl "boolean"
     alaris_consistency_pattern nil)
    (guard_entrymode const-decl "boolean" alaris_consistency_pattern
     nil)
    (filter_entrymode const-decl "emodes" alaris_consistency_pattern
     nil))
   shostak))
 (consistency_entrymode_theorem_generalkey 0
  (consistency_entrymode_theorem_generalkey-1 nil 3709529517
   ("" (grind) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (pause const-decl "pump" pump_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (pause const-decl "state" alaris_th nil)
    (filter_entrymode const-decl "emodes" alaris_consistency_pattern
     nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key1 const-decl "state" alaris_th nil))
   shostak))
 (consistency_entrymode_theorem_chevronkeys 0
  (consistency_entrymode_theorem_chevronkeys-1 nil 3709529685
   ("" (skosimp*)
    (("" (expand "state_transitions_chevrons")
      (("" (split)
        (("1" (grind) nil nil) ("2" (grind) nil nil)
         ("3" (grind) nil nil) ("4" (grind) nil nil)
         ("5" (grind) nil nil) ("6" (grind) nil nil)
         ("7" (grind) nil nil) ("8" (grind) nil nil))
        nil))
      nil))
    nil)
   ((state_transitions_chevrons const-decl "boolean"
     alaris_consistency_pattern nil)
    (per_release_fdown const-decl "boolean" alaris_th nil)
    (release_fdown const-decl "state" alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (state_DN_rate const-decl "irates" alaris_th nil)
    (fdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (fdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (fdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fdown_case_options const-decl "state" alaris_th nil)
    (fdown const-decl "state" alaris_th nil)
    (per_release_sdown const-decl "boolean" alaris_th nil)
    (release_sdown const-decl "state" alaris_th nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (ceil_rate const-decl "irates" alaris_th nil)
    (state_dn_rate const-decl "irates" alaris_th nil)
    (sdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (sdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (sdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (sdown_case_options const-decl "state" alaris_th nil)
    (sdown const-decl "state" alaris_th nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (per_release_fup const-decl "boolean" alaris_th nil)
    (release_fup const-decl "state" alaris_th nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (per_fup const-decl "bool" alaris_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (state_UP_rate const-decl "irates" alaris_th nil)
    (fup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (fup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (fup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fup_case_options const-decl "state" alaris_th nil)
    (fup const-decl "state" alaris_th nil)
    (per_release_chevron const-decl "boolean" alaris_th nil)
    (per_release_sup const-decl "boolean" alaris_th nil)
    (release_key const-decl "state" alaris_th nil)
    (release_sup const-decl "state" alaris_th nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (decrement const-decl "presstime" alaris_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (trim_rate const-decl "irates" alaris_th nil)
    (state_up_rate const-decl "irates" alaris_th nil)
    (aug_rate const-decl "pump" pump_th nil)
    (sup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (sup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (sup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (sup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (sup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (sup_case_options const-decl "state" alaris_th nil)
    (sup const-decl "state" alaris_th nil)
    (filter_entrymode const-decl "emodes" alaris_consistency_pattern
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil))
   shostak))
 (ok_goal_consistent_theorem 0
  (ok_goal_consistent_theorem-1 nil 3709531069
   ("" (skosimp*)
    (("" (split)
      (("1" (grind) nil nil)
       ("2" (expand "state_transitions")
        (("2" (flatten)
          (("2" (split)
            (("1" (grind) nil nil) ("2" (grind) nil nil)
             ("3" (grind) nil nil) ("4" (grind) nil nil)
             ("5" (grind) nil nil) ("6" (grind) nil nil)
             ("7" (grind) nil nil) ("8" (grind) nil nil)
             ("9" (grind) nil nil) ("10" (grind) nil nil)
             ("11" (grind) nil nil) ("12" (grind) nil nil)
             ("13" (grind) nil nil) ("14" (grind) nil nil)
             ("15" (grind) nil nil) ("16" (grind) nil nil)
             ("17" (grind) nil nil) ("18" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ok_goal_consistent const-decl "boolean" alaris_consistency_pattern
     nil)
    (goal_ok const-decl "boolean" alaris_consistency_pattern nil)
    (key1 const-decl "state" alaris_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (start const-decl "pump" pump_th nil)
    (per_start const-decl "bool" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (guard_ok const-decl "boolean" alaris_consistency_pattern nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (init? const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (per_fit_set const-decl "boolean" alaris_th nil)
    (fit_to_hold const-decl "state" alaris_th nil)
    (connect_set const-decl "pump" pump_th nil)
    (fit_set const-decl "state" alaris_th nil)
    (per_switch const-decl "boolean" alaris_th nil)
    (mains_switch const-decl "pump" pump_th nil)
    (switch_battery_low const-decl "state" alaris_th nil)
    (switch_from_battery_low const-decl "state" alaris_th nil)
    (switch const-decl "state" alaris_th nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (pause const-decl "pump" pump_th nil)
    (pause const-decl "state" alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (run_cond_NZ const-decl "state" alaris_th nil)
    (run_check_rlock const-decl "state" alaris_th nil)
    (run_cond_vtbi0_kvoflag const-decl "state" alaris_th nil)
    (run_cond_vtbi0_NOTkvoflag const-decl "state" alaris_th nil)
    (run_cond_setnotfitted const-decl "state" alaris_th nil)
    (run const-decl "state" alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (on const-decl "pump" pump_th nil)
    (on_case_infusionstatusblank const-decl "state" alaris_th nil)
    (on_case_infusionstatusNOTblank const-decl "state" alaris_th nil)
    (on const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (query const-decl "state" alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2 const-decl "state" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (tick_case_infuse_and_infusionrateLvtbi const-decl "pump" pump_th
     nil)
    (tick_case_infuse_and_infusionrateGEvtbi_NOTkvoflag const-decl
     "pump" pump_th nil)
    (tick_case_infuse_and_infusionrateGEvtbi_kvoflag const-decl "pump"
     pump_th nil)
    (tick const-decl "pump" pump_th nil)
    (tick_case_battery_warning const-decl "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQtimeout const-decl "state"
     alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQshorttimeout const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeoutlocked const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeout const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbilocked const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbi const-decl "state" alaris_th
     nil)
    (tick_case_infuse_infusionrateEQvtbi_notkvoflag const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_kvoflag const-decl "state"
     alaris_th nil)
    (tick const-decl "state" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (per_release_fdown const-decl "boolean" alaris_th nil)
    (release_fdown const-decl "state" alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (state_DN_rate const-decl "irates" alaris_th nil)
    (fdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (fdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (fdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fdown_case_options const-decl "state" alaris_th nil)
    (fdown const-decl "state" alaris_th nil)
    (per_release_sdown const-decl "boolean" alaris_th nil)
    (release_sdown const-decl "state" alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (ceil_rate const-decl "irates" alaris_th nil)
    (state_dn_rate const-decl "irates" alaris_th nil)
    (sdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (sdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (sdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (sdown_case_options const-decl "state" alaris_th nil)
    (sdown const-decl "state" alaris_th nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (per_release_fup const-decl "boolean" alaris_th nil)
    (release_fup const-decl "state" alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (state_UP_rate const-decl "irates" alaris_th nil)
    (fup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (fup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (fup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fup_case_options const-decl "state" alaris_th nil)
    (fup const-decl "state" alaris_th nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (per_release_chevron const-decl "boolean" alaris_th nil)
    (per_release_sup const-decl "boolean" alaris_th nil)
    (release_key const-decl "state" alaris_th nil)
    (release_sup const-decl "state" alaris_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (decrement const-decl "presstime" alaris_th nil)
    (trim_rate const-decl "irates" alaris_th nil)
    (state_up_rate const-decl "irates" alaris_th nil)
    (aug_rate const-decl "pump" pump_th nil)
    (sup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (sup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (sup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (sup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (sup_case_options const-decl "state" alaris_th nil)
    (sup const-decl "state" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (state_transitions const-decl "boolean" alaris_consistency_pattern
     nil))
   shostak))
 (quit_goal_consistent_theorem 0
  (quit_goal_consistent_theorem-1 nil 3709532500
   ("" (skosimp*)
    (("" (split)
      (("1" (grind) nil nil)
       ("2" (expand "state_transitions")
        (("2" (flatten)
          (("2" (split)
            (("1" (grind) nil nil) ("2" (grind) nil nil)
             ("3" (grind) nil nil) ("4" (grind) nil nil)
             ("5" (grind) nil nil) ("6" (grind) nil nil)
             ("7" (grind) nil nil) ("8" (grind) nil nil)
             ("9" (grind) nil nil) ("10" (grind) nil nil)
             ("11" (grind) nil nil) ("12" (grind) nil nil)
             ("13" (grind) nil nil) ("14" (grind) nil nil)
             ("15" (grind) nil nil) ("16" (grind) nil nil)
             ("17" (grind) nil nil) ("18" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((quit_goal_consistent const-decl "boolean"
     alaris_consistency_pattern nil)
    (goal_quit const-decl "boolean" alaris_consistency_pattern nil)
    (key3 const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (start const-decl "pump" pump_th nil)
    (per_start const-decl "bool" pump_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (guard_quit const-decl "boolean" alaris_consistency_pattern nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (init? const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (per_fit_set const-decl "boolean" alaris_th nil)
    (fit_to_hold const-decl "state" alaris_th nil)
    (connect_set const-decl "pump" pump_th nil)
    (fit_set const-decl "state" alaris_th nil)
    (per_switch const-decl "boolean" alaris_th nil)
    (mains_switch const-decl "pump" pump_th nil)
    (switch_battery_low const-decl "state" alaris_th nil)
    (switch_from_battery_low const-decl "state" alaris_th nil)
    (switch const-decl "state" alaris_th nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (pause const-decl "pump" pump_th nil)
    (pause const-decl "state" alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (run_cond_NZ const-decl "state" alaris_th nil)
    (run_check_rlock const-decl "state" alaris_th nil)
    (run_cond_vtbi0_kvoflag const-decl "state" alaris_th nil)
    (run_cond_vtbi0_NOTkvoflag const-decl "state" alaris_th nil)
    (run_cond_setnotfitted const-decl "state" alaris_th nil)
    (run const-decl "state" alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (on const-decl "pump" pump_th nil)
    (on_case_infusionstatusblank const-decl "state" alaris_th nil)
    (on_case_infusionstatusNOTblank const-decl "state" alaris_th nil)
    (on const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (query const-decl "state" alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2 const-decl "state" alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key1 const-decl "state" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (tick_case_infuse_and_infusionrateLvtbi const-decl "pump" pump_th
     nil)
    (tick_case_infuse_and_infusionrateGEvtbi_NOTkvoflag const-decl
     "pump" pump_th nil)
    (tick_case_infuse_and_infusionrateGEvtbi_kvoflag const-decl "pump"
     pump_th nil)
    (tick const-decl "pump" pump_th nil)
    (tick_case_battery_warning const-decl "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQtimeout const-decl "state"
     alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQshorttimeout const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeoutlocked const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeout const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbilocked const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbi const-decl "state" alaris_th
     nil)
    (tick_case_infuse_infusionrateEQvtbi_notkvoflag const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_kvoflag const-decl "state"
     alaris_th nil)
    (tick const-decl "state" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (per_release_fdown const-decl "boolean" alaris_th nil)
    (release_fdown const-decl "state" alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (state_DN_rate const-decl "irates" alaris_th nil)
    (fdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (fdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (fdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fdown_case_options const-decl "state" alaris_th nil)
    (fdown const-decl "state" alaris_th nil)
    (per_release_sdown const-decl "boolean" alaris_th nil)
    (release_sdown const-decl "state" alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (ceil_rate const-decl "irates" alaris_th nil)
    (state_dn_rate const-decl "irates" alaris_th nil)
    (sdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (sdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (sdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (sdown_case_options const-decl "state" alaris_th nil)
    (sdown const-decl "state" alaris_th nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (per_release_fup const-decl "boolean" alaris_th nil)
    (release_fup const-decl "state" alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (state_UP_rate const-decl "irates" alaris_th nil)
    (fup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (fup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (fup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fup_case_options const-decl "state" alaris_th nil)
    (fup const-decl "state" alaris_th nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (per_release_chevron const-decl "boolean" alaris_th nil)
    (per_release_sup const-decl "boolean" alaris_th nil)
    (release_key const-decl "state" alaris_th nil)
    (release_sup const-decl "state" alaris_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (decrement const-decl "presstime" alaris_th nil)
    (trim_rate const-decl "irates" alaris_th nil)
    (state_up_rate const-decl "irates" alaris_th nil)
    (aug_rate const-decl "pump" pump_th nil)
    (sup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (sup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (sup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (sup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (sup_case_options const-decl "state" alaris_th nil)
    (sup const-decl "state" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (state_transitions const-decl "boolean" alaris_consistency_pattern
     nil))
   shostak))
 (init_volume_goal_consistent_TCC1 0
  (init_volume_goal_consistent_TCC1-1 nil 3709534332
   ("" (subtype-tcc) nil nil) nil nil))
 (init_volume_goal_consistent_theorem 0
  (init_volume_goal_consistent_theorem-1 nil 3709534333
   ("" (skosimp*)
    (("" (split)
      (("1" (grind) nil nil)
       ("2" (expand "state_transitions")
        (("2" (flatten)
          (("2" (split)
            (("1" (grind) nil nil) ("2" (grind) nil nil)
             ("3" (grind) nil nil) ("4" (grind) nil nil)
             ("5" (grind) nil nil) ("6" (grind) nil nil)
             ("7" (grind) nil nil) ("8" (grind) nil nil)
             ("9" (grind) nil nil) ("10" (grind) nil nil)
             ("11" (grind) nil nil) ("12" (grind) nil nil)
             ("13" (grind) nil nil) ("14" (grind) nil nil)
             ("15" (grind) nil nil) ("16" (grind) nil nil)
             ("17" (grind) nil nil) ("18" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((init_volume_goal_consistent const-decl "boolean"
     alaris_consistency_pattern nil)
    (goal_init_volume const-decl "boolean" alaris_consistency_pattern
     nil)
    (key2 const-decl "state" alaris_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (/= const-decl "boolean" notequal nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (guard_init_volume const-decl "boolean" alaris_consistency_pattern
     nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (init? const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (per_fit_set const-decl "boolean" alaris_th nil)
    (fit_to_hold const-decl "state" alaris_th nil)
    (connect_set const-decl "pump" pump_th nil)
    (fit_set const-decl "state" alaris_th nil)
    (per_switch const-decl "boolean" alaris_th nil)
    (mains_switch const-decl "pump" pump_th nil)
    (switch_battery_low const-decl "state" alaris_th nil)
    (switch_from_battery_low const-decl "state" alaris_th nil)
    (switch const-decl "state" alaris_th nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (pause const-decl "pump" pump_th nil)
    (pause const-decl "state" alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (run_cond_NZ const-decl "state" alaris_th nil)
    (run_check_rlock const-decl "state" alaris_th nil)
    (run_cond_vtbi0_kvoflag const-decl "state" alaris_th nil)
    (run_cond_vtbi0_NOTkvoflag const-decl "state" alaris_th nil)
    (run_cond_setnotfitted const-decl "state" alaris_th nil)
    (run const-decl "state" alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (on const-decl "pump" pump_th nil)
    (on_case_infusionstatusblank const-decl "state" alaris_th nil)
    (on_case_infusionstatusNOTblank const-decl "state" alaris_th nil)
    (on const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (query const-decl "state" alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key1 const-decl "state" alaris_th nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (per_tick const-decl "boolean" pump_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (tick_case_infuse_and_infusionrateLvtbi const-decl "pump" pump_th
     nil)
    (tick_case_infuse_and_infusionrateGEvtbi_NOTkvoflag const-decl
     "pump" pump_th nil)
    (tick_case_infuse_and_infusionrateGEvtbi_kvoflag const-decl "pump"
     pump_th nil)
    (tick const-decl "pump" pump_th nil)
    (tick_case_battery_warning const-decl "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQtimeout const-decl "state"
     alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQshorttimeout const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeoutlocked const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeout const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbilocked const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbi const-decl "state" alaris_th
     nil)
    (tick_case_infuse_infusionrateEQvtbi_notkvoflag const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_kvoflag const-decl "state"
     alaris_th nil)
    (tick const-decl "state" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (per_release_fdown const-decl "boolean" alaris_th nil)
    (release_fdown const-decl "state" alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (state_DN_rate const-decl "irates" alaris_th nil)
    (fdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (fdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (fdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fdown_case_options const-decl "state" alaris_th nil)
    (fdown const-decl "state" alaris_th nil)
    (per_release_sdown const-decl "boolean" alaris_th nil)
    (release_sdown const-decl "state" alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (ceil_rate const-decl "irates" alaris_th nil)
    (state_dn_rate const-decl "irates" alaris_th nil)
    (sdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (sdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (sdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (sdown_case_options const-decl "state" alaris_th nil)
    (sdown const-decl "state" alaris_th nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (per_release_fup const-decl "boolean" alaris_th nil)
    (release_fup const-decl "state" alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (state_UP_rate const-decl "irates" alaris_th nil)
    (fup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (fup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (fup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fup_case_options const-decl "state" alaris_th nil)
    (fup const-decl "state" alaris_th nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (per_release_chevron const-decl "boolean" alaris_th nil)
    (per_release_sup const-decl "boolean" alaris_th nil)
    (release_key const-decl "state" alaris_th nil)
    (release_sup const-decl "state" alaris_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (decrement const-decl "presstime" alaris_th nil)
    (trim_rate const-decl "irates" alaris_th nil)
    (state_up_rate const-decl "irates" alaris_th nil)
    (aug_rate const-decl "pump" pump_th nil)
    (sup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (sup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (sup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (sup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (sup_case_options const-decl "state" alaris_th nil)
    (sup const-decl "state" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (state_transitions const-decl "boolean" alaris_consistency_pattern
     nil))
   shostak))
 (quit_pump_nochange_consistent_theorem 0
  (quit_pump_nochange_consistent_theorem-1 nil 3709536759
   ("" (skosimp*) (("" (grind) nil nil)) nil)
   ((key3 const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (start const-decl "pump" pump_th nil)
    (per_start const-decl "bool" pump_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (filter_rate const-decl "irates" alaris_consistency_pattern nil)
    (guard_quit_pump_nochange const-decl "bool"
     alaris_consistency_pattern nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil))
   shostak))
 (pump_parameters_untouched_theorem 0
  (pump_parameters_untouched_theorem-1 nil 3709538610
   ("" (skosimp*) (("" (grind) nil nil)) nil)
   ((paused_state const-decl "boolean" alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2 const-decl "state" alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (query const-decl "state" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (tick_case_infuse_and_infusionrateLvtbi const-decl "pump" pump_th
     nil)
    (tick_case_infuse_and_infusionrateGEvtbi_NOTkvoflag const-decl
     "pump" pump_th nil)
    (tick_case_infuse_and_infusionrateGEvtbi_kvoflag const-decl "pump"
     pump_th nil)
    (tick const-decl "pump" pump_th nil)
    (tick_case_battery_warning const-decl "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQtimeout const-decl "state"
     alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQshorttimeout const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeoutlocked const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeout const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbilocked const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbi const-decl "state" alaris_th
     nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (release_key const-decl "state" alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_notkvoflag const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_kvoflag const-decl "state"
     alaris_th nil)
    (tick const-decl "state" alaris_th nil)
    (state_transitions_nochevrons_or_key1 const-decl "boolean"
     alaris_consistency_pattern nil)
    (filter_time const-decl "itimes" alaris_consistency_pattern nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (filter_vtbi const-decl "ivols" alaris_consistency_pattern nil)
    (filter_rate const-decl "irates" alaris_consistency_pattern nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key1 const-decl "state" alaris_th nil))
   shostak))
 (consistent_fnkeyok_vt_theorem_TCC1 0
  (consistent_fnkeyok_vt_theorem_TCC1-1 nil 3709539282
   ("" (subtype-tcc) nil nil) nil nil))
 (consistent_fnkeyok_vt_theorem 0
  (consistent_fnkeyok_vt_theorem-1 nil 3709539283
   ("" (skosimp*) (("" (grind) nil nil)) nil)
   ((filter_vtbi const-decl "ivols" alaris_consistency_pattern nil)
    (key1 const-decl "state" alaris_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (start const-decl "pump" pump_th nil)
    (per_start const-decl "bool" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (filter_newvtbi const-decl "ivols" alaris_consistency_pattern nil)
    (guard_fnkeyok_vt const-decl "bool" alaris_consistency_pattern nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil))
   shostak))
 (consistent_ok_ttmode_theorem_TCC1 0
  (consistent_ok_ttmode_theorem_TCC1-1 nil 3709540431
   ("" (subtype-tcc) nil nil) nil nil))
 (consistent_ok_ttmode_theorem 0
  (consistent_ok_ttmode_theorem-1 nil 3709540432
   ("" (skosimp*) (("" (grind) nil nil)) nil)
   ((filter_time const-decl "itimes" alaris_consistency_pattern nil)
    (key1 const-decl "state" alaris_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (start const-decl "pump" pump_th nil)
    (per_start const-decl "bool" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (filter_newtime const-decl "itimes" alaris_consistency_pattern nil)
    (guard_ok_ttmode const-decl "bool" alaris_consistency_pattern nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil))
   shostak))
 (temp_mode_filter_TCC1 0
  (temp_mode_filter_TCC1-1 nil 3663999454
   ("" (cond-disjoint-tcc) nil nil) nil nil))
 (temp_mode_filter_TCC2 0
  (temp_mode_filter_TCC2-1 nil 3663999454
   ("" (cond-disjoint-tcc) nil nil) nil nil))
 (real_mode_filter_TCC1 0
  (real_mode_filter_TCC1-1 nil 3663999454
   ("" (cond-disjoint-tcc) nil nil) nil nil))
 (consistency_ok_em_TCC1 0
  (consistency_ok_em_TCC1-1 nil 3663664716 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (guard_em_ok const-decl "boolean" alaris_consistency_pattern nil))
   nil))
 (consistency_ok_em 0
  (consistency_ok_em-1 nil 3663664717
   ("" (skosimp*)
    (("" (expand "guard_em_ok")
      (("" (flatten)
        (("" (expand "per_key1")
          (("" (flatten)
            (("" (split)
              (("1" (flatten)
                (("1" (split)
                  (("1" (flatten) (("1" (grind) nil nil)) nil)
                   ("2" (flatten)
                    (("2" (split)
                      (("1" (grind) nil nil) ("2" (grind) nil nil))
                      nil))
                    nil)
                   ("3" (flatten)
                    (("3" (split)
                      (("1" (flatten) (("1" (grind) nil nil)) nil)
                       ("2" (flatten)
                        (("2" (replace -1 -7) (("2" (grind) nil nil))
                          nil))
                        nil)
                       ("3" (grind) nil nil))
                      nil))
                    nil)
                   ("4" (grind) nil nil) ("5" (grind) nil nil))
                  nil))
                nil)
               ("2" (grind) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (real_mode_filter const-decl "real" alaris_consistency_pattern nil)
    (key1 const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (temp_mode_filter const-decl "real" alaris_consistency_pattern nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (guard_em_ok const-decl "boolean" alaris_consistency_pattern nil))
   shostak))
 (dispvtbimode_unchanged_parameters 0
  (dispvtbimode_unchanged_parameters-1 nil 3709545997
   ("" (skosimp*) (("" (grind) nil nil)) nil)
   ((nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (rat_minus_rat_is_rat application-judgement "rat" rationals nil)
    (paused_state const-decl "boolean" alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (decrement const-decl "presstime" alaris_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (trim_rate const-decl "irates" alaris_th nil)
    (state_up_rate const-decl "irates" alaris_th nil)
    (aug_rate const-decl "pump" pump_th nil)
    (sup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (sup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (sup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (sup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (sup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (sup_case_options const-decl "state" alaris_th nil)
    (sup const-decl "state" alaris_th nil)
    (per_release_chevron const-decl "boolean" alaris_th nil)
    (per_release_sup const-decl "boolean" alaris_th nil)
    (release_key const-decl "state" alaris_th nil)
    (release_sup const-decl "state" alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (state_UP_rate const-decl "irates" alaris_th nil)
    (fup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (fup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (fup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fup_case_options const-decl "state" alaris_th nil)
    (fup const-decl "state" alaris_th nil)
    (per_release_fup const-decl "boolean" alaris_th nil)
    (release_fup const-decl "state" alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (ceil_rate const-decl "irates" alaris_th nil)
    (state_dn_rate const-decl "irates" alaris_th nil)
    (sdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (sdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (sdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (sdown_case_options const-decl "state" alaris_th nil)
    (sdown const-decl "state" alaris_th nil)
    (per_release_sdown const-decl "boolean" alaris_th nil)
    (release_sdown const-decl "state" alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (state_DN_rate const-decl "irates" alaris_th nil)
    (fdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (fdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (fdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fdown_case_options const-decl "state" alaris_th nil)
    (fdown const-decl "state" alaris_th nil)
    (per_release_fdown const-decl "boolean" alaris_th nil)
    (release_fdown const-decl "state" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (tick_case_infuse_and_infusionrateLvtbi const-decl "pump" pump_th
     nil)
    (tick_case_infuse_and_infusionrateGEvtbi_NOTkvoflag const-decl
     "pump" pump_th nil)
    (tick_case_infuse_and_infusionrateGEvtbi_kvoflag const-decl "pump"
     pump_th nil)
    (tick const-decl "pump" pump_th nil)
    (tick_case_battery_warning const-decl "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQtimeout const-decl "state"
     alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQshorttimeout const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeoutlocked const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeout const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbilocked const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbi const-decl "state" alaris_th
     nil)
    (tick_case_infuse_infusionrateEQvtbi_notkvoflag const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_kvoflag const-decl "state"
     alaris_th nil)
    (tick const-decl "state" alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key1 const-decl "state" alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2 const-decl "state" alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (query const-decl "state" alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (on const-decl "pump" pump_th nil)
    (on_case_infusionstatusblank const-decl "state" alaris_th nil)
    (on_case_infusionstatusNOTblank const-decl "state" alaris_th nil)
    (on const-decl "state" alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (run_cond_NZ const-decl "state" alaris_th nil)
    (run_check_rlock const-decl "state" alaris_th nil)
    (run_cond_vtbi0_kvoflag const-decl "state" alaris_th nil)
    (run_cond_vtbi0_NOTkvoflag const-decl "state" alaris_th nil)
    (run_cond_setnotfitted const-decl "state" alaris_th nil)
    (run const-decl "state" alaris_th nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (pause const-decl "pump" pump_th nil)
    (pause const-decl "state" alaris_th nil)
    (per_switch const-decl "boolean" alaris_th nil)
    (mains_switch const-decl "pump" pump_th nil)
    (switch_battery_low const-decl "state" alaris_th nil)
    (switch_from_battery_low const-decl "state" alaris_th nil)
    (switch const-decl "state" alaris_th nil)
    (per_fit_set const-decl "boolean" alaris_th nil)
    (fit_to_hold const-decl "state" alaris_th nil)
    (connect_set const-decl "pump" pump_th nil)
    (fit_set const-decl "state" alaris_th nil)
    (state_transitions const-decl "boolean" alaris_consistency_pattern
     nil)
    (vis_dispvtbi const-decl "boolean" alaris_consistency_pattern nil)
    (filter_time const-decl "itimes" alaris_consistency_pattern nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (filter_vtbi const-decl "ivols" alaris_consistency_pattern nil)
    (filter_rate const-decl "irates" alaris_consistency_pattern nil))
   shostak))
 (vtbitimemode_unchanged_parameters 0
  (vtbitimemode_unchanged_parameters-1 nil 3709546227
   ("" (skosimp*) (("" (grind) nil nil)) nil)
   ((nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (rat_minus_rat_is_rat application-judgement "rat" rationals nil)
    (paused_state const-decl "boolean" alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (decrement const-decl "presstime" alaris_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (trim_rate const-decl "irates" alaris_th nil)
    (state_up_rate const-decl "irates" alaris_th nil)
    (aug_rate const-decl "pump" pump_th nil)
    (sup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (sup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (sup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (sup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (sup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (sup_case_options const-decl "state" alaris_th nil)
    (sup const-decl "state" alaris_th nil)
    (per_release_chevron const-decl "boolean" alaris_th nil)
    (per_release_sup const-decl "boolean" alaris_th nil)
    (release_key const-decl "state" alaris_th nil)
    (release_sup const-decl "state" alaris_th nil)
    (per_fup const-decl "bool" alaris_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (state_UP_rate const-decl "irates" alaris_th nil)
    (fup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (fup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (fup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fup_case_options const-decl "state" alaris_th nil)
    (fup const-decl "state" alaris_th nil)
    (per_release_fup const-decl "boolean" alaris_th nil)
    (release_fup const-decl "state" alaris_th nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (ceil_rate const-decl "irates" alaris_th nil)
    (state_dn_rate const-decl "irates" alaris_th nil)
    (sdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (sdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (sdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (sdown_case_options const-decl "state" alaris_th nil)
    (sdown const-decl "state" alaris_th nil)
    (per_release_sdown const-decl "boolean" alaris_th nil)
    (release_sdown const-decl "state" alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (state_DN_rate const-decl "irates" alaris_th nil)
    (fdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (fdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (fdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fdown_case_options const-decl "state" alaris_th nil)
    (fdown const-decl "state" alaris_th nil)
    (per_release_fdown const-decl "boolean" alaris_th nil)
    (release_fdown const-decl "state" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (tick_case_infuse_and_infusionrateLvtbi const-decl "pump" pump_th
     nil)
    (tick_case_infuse_and_infusionrateGEvtbi_NOTkvoflag const-decl
     "pump" pump_th nil)
    (tick_case_infuse_and_infusionrateGEvtbi_kvoflag const-decl "pump"
     pump_th nil)
    (tick const-decl "pump" pump_th nil)
    (tick_case_battery_warning const-decl "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQtimeout const-decl "state"
     alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQshorttimeout const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeoutlocked const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeout const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbilocked const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbi const-decl "state" alaris_th
     nil)
    (tick_case_infuse_infusionrateEQvtbi_notkvoflag const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_kvoflag const-decl "state"
     alaris_th nil)
    (tick const-decl "state" alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key1 const-decl "state" alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2 const-decl "state" alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (query const-decl "state" alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (on const-decl "pump" pump_th nil)
    (on_case_infusionstatusblank const-decl "state" alaris_th nil)
    (on_case_infusionstatusNOTblank const-decl "state" alaris_th nil)
    (on const-decl "state" alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (run_cond_NZ const-decl "state" alaris_th nil)
    (run_check_rlock const-decl "state" alaris_th nil)
    (run_cond_vtbi0_kvoflag const-decl "state" alaris_th nil)
    (run_cond_vtbi0_NOTkvoflag const-decl "state" alaris_th nil)
    (run_cond_setnotfitted const-decl "state" alaris_th nil)
    (run const-decl "state" alaris_th nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (pause const-decl "pump" pump_th nil)
    (pause const-decl "state" alaris_th nil)
    (per_switch const-decl "boolean" alaris_th nil)
    (mains_switch const-decl "pump" pump_th nil)
    (switch_battery_low const-decl "state" alaris_th nil)
    (switch_from_battery_low const-decl "state" alaris_th nil)
    (switch const-decl "state" alaris_th nil)
    (per_fit_set const-decl "boolean" alaris_th nil)
    (fit_to_hold const-decl "state" alaris_th nil)
    (connect_set const-decl "pump" pump_th nil)
    (fit_set const-decl "state" alaris_th nil)
    (state_transitions const-decl "boolean" alaris_consistency_pattern
     nil)
    (vis_vtbitime const-decl "boolean" alaris_consistency_pattern nil)
    (filter_time const-decl "itimes" alaris_consistency_pattern nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (filter_vtbi const-decl "ivols" alaris_consistency_pattern nil)
    (filter_rate const-decl "irates" alaris_consistency_pattern nil))
   shostak))
 (pump_invariant_inmode 0
  (pump_invariant_inmode-1 nil 3632473660
   ("" (skosimp*)
    (("" (expand "state_transitions")
      (("" (split)
        (("1" (grind) nil nil) ("2" (grind) nil nil)
         ("3" (grind) nil nil) ("4" (grind) nil nil)
         ("5" (grind) nil nil) ("6" (grind) nil nil)
         ("7" (grind) nil nil) ("8" (grind) nil nil)
         ("9" (grind) nil nil) ("10" (grind) nil nil)
         ("11" (grind) nil nil) ("12" (grind) nil nil)
         ("13" (grind) nil nil) ("14" (grind) nil nil)
         ("15" (grind) nil nil) ("16" (grind) nil nil)
         ("17" (grind) nil nil) ("18" (grind) nil nil))
        nil))
      nil))
    nil)
   ((state_transitions const-decl "boolean" alaris_consistency_pattern
     nil)
    (per_fit_set const-decl "boolean" alaris_th nil)
    (fit_to_hold const-decl "state" alaris_th nil)
    (connect_set const-decl "pump" pump_th nil)
    (fit_set const-decl "state" alaris_th nil)
    (per_switch const-decl "boolean" alaris_th nil)
    (mains_switch const-decl "pump" pump_th nil)
    (switch_battery_low const-decl "state" alaris_th nil)
    (switch_from_battery_low const-decl "state" alaris_th nil)
    (switch const-decl "state" alaris_th nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (pause const-decl "pump" pump_th nil)
    (pause const-decl "state" alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (run_cond_NZ const-decl "state" alaris_th nil)
    (run_check_rlock const-decl "state" alaris_th nil)
    (run_cond_vtbi0_kvoflag const-decl "state" alaris_th nil)
    (run_cond_vtbi0_NOTkvoflag const-decl "state" alaris_th nil)
    (run_cond_setnotfitted const-decl "state" alaris_th nil)
    (run const-decl "state" alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (on const-decl "pump" pump_th nil)
    (on_case_infusionstatusblank const-decl "state" alaris_th nil)
    (on_case_infusionstatusNOTblank const-decl "state" alaris_th nil)
    (on const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (query const-decl "state" alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2 const-decl "state" alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key1 const-decl "state" alaris_th nil)
    (per_tick const-decl "boolean" pump_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (tick_case_infuse_and_infusionrateLvtbi const-decl "pump" pump_th
     nil)
    (tick_case_infuse_and_infusionrateGEvtbi_NOTkvoflag const-decl
     "pump" pump_th nil)
    (tick_case_infuse_and_infusionrateGEvtbi_kvoflag const-decl "pump"
     pump_th nil)
    (tick const-decl "pump" pump_th nil)
    (tick_case_battery_warning const-decl "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQtimeout const-decl "state"
     alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQshorttimeout const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeoutlocked const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeout const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbilocked const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbi const-decl "state" alaris_th
     nil)
    (tick_case_infuse_infusionrateEQvtbi_notkvoflag const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_kvoflag const-decl "state"
     alaris_th nil)
    (tick const-decl "state" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (per_release_fdown const-decl "boolean" alaris_th nil)
    (release_fdown const-decl "state" alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (state_DN_rate const-decl "irates" alaris_th nil)
    (fdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (fdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (fdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fdown_case_options const-decl "state" alaris_th nil)
    (fdown const-decl "state" alaris_th nil)
    (per_release_sdown const-decl "boolean" alaris_th nil)
    (release_sdown const-decl "state" alaris_th nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (ceil_rate const-decl "irates" alaris_th nil)
    (state_dn_rate const-decl "irates" alaris_th nil)
    (sdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (sdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (sdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (sdown_case_options const-decl "state" alaris_th nil)
    (sdown const-decl "state" alaris_th nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (per_release_fup const-decl "boolean" alaris_th nil)
    (release_fup const-decl "state" alaris_th nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (per_fup const-decl "bool" alaris_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (state_UP_rate const-decl "irates" alaris_th nil)
    (fup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (fup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (fup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fup_case_options const-decl "state" alaris_th nil)
    (fup const-decl "state" alaris_th nil)
    (per_release_chevron const-decl "boolean" alaris_th nil)
    (per_release_sup const-decl "boolean" alaris_th nil)
    (release_key const-decl "state" alaris_th nil)
    (release_sup const-decl "state" alaris_th nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (decrement const-decl "presstime" alaris_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (trim_rate const-decl "irates" alaris_th nil)
    (state_up_rate const-decl "irates" alaris_th nil)
    (aug_rate const-decl "pump" pump_th nil)
    (sup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (sup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (sup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (sup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (sup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (sup_case_options const-decl "state" alaris_th nil)
    (sup const-decl "state" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil))
   shostak))
 (consistency_quit_em_TCC1 0
  (consistency_quit_em_TCC1-1 nil 3663999454 ("" (subtype-tcc) nil nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (guard_em_quit const-decl "boolean" alaris_consistency_pattern
     nil))
   nil))
 (consistency_quit_em 0
  (consistency_quit_em-1 nil 3663999584
   ("" (skosimp*) (("" (grind) nil nil)) nil)
   ((bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (/= const-decl "boolean" notequal nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (guard_em_quit const-decl "boolean" alaris_consistency_pattern nil)
    (real_mode_filter const-decl "real" alaris_consistency_pattern nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil))
   shostak))
 (f3quit_consistent_theorem 0
  (f3quit_consistent_theorem-1 nil 3689663002
   ("" (skosimp*)
    (("" (split)
      (("1" (grind) nil nil)
       ("2" (expand "state_transitions")
        (("2" (flatten)
          (("2" (split)
            (("1" (grind) nil nil) ("2" (grind) nil nil)
             ("3" (grind) nil nil) ("4" (grind) nil nil)
             ("5" (grind) nil nil) ("6" (grind) nil nil)
             ("7" (grind) nil nil) ("8" (grind) nil nil)
             ("9" (grind) nil nil) ("10" (grind) nil nil)
             ("11" (grind) nil nil) ("12" (grind) nil nil)
             ("13" (grind) nil nil) ("14" (grind) nil nil)
             ("15" (grind) nil nil) ("16" (grind) nil nil)
             ("17" (grind) nil nil) ("18" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((f3quit_consistent const-decl "boolean" alaris_consistency_pattern
     nil)
    (f3quit_invariant const-decl "boolean" alaris_consistency_pattern
     nil)
    (/= const-decl "boolean" notequal nil)
    (f3quit_invariant_guard const-decl "boolean"
     alaris_consistency_pattern nil)
    (init? const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (per_fit_set const-decl "boolean" alaris_th nil)
    (fit_to_hold const-decl "state" alaris_th nil)
    (connect_set const-decl "pump" pump_th nil)
    (fit_set const-decl "state" alaris_th nil)
    (per_switch const-decl "boolean" alaris_th nil)
    (mains_switch const-decl "pump" pump_th nil)
    (switch_battery_low const-decl "state" alaris_th nil)
    (switch_from_battery_low const-decl "state" alaris_th nil)
    (switch const-decl "state" alaris_th nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (pause const-decl "pump" pump_th nil)
    (pause const-decl "state" alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (run_cond_NZ const-decl "state" alaris_th nil)
    (run_check_rlock const-decl "state" alaris_th nil)
    (run_cond_vtbi0_kvoflag const-decl "state" alaris_th nil)
    (run_cond_vtbi0_NOTkvoflag const-decl "state" alaris_th nil)
    (run_cond_setnotfitted const-decl "state" alaris_th nil)
    (run const-decl "state" alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (on const-decl "pump" pump_th nil)
    (on_case_infusionstatusblank const-decl "state" alaris_th nil)
    (on_case_infusionstatusNOTblank const-decl "state" alaris_th nil)
    (on const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (query const-decl "state" alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2 const-decl "state" alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key1 const-decl "state" alaris_th nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (per_tick const-decl "boolean" pump_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (tick_case_infuse_and_infusionrateLvtbi const-decl "pump" pump_th
     nil)
    (tick_case_infuse_and_infusionrateGEvtbi_NOTkvoflag const-decl
     "pump" pump_th nil)
    (tick_case_infuse_and_infusionrateGEvtbi_kvoflag const-decl "pump"
     pump_th nil)
    (tick const-decl "pump" pump_th nil)
    (tick_case_battery_warning const-decl "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQtimeout const-decl "state"
     alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQshorttimeout const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeoutlocked const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeout const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbilocked const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbi const-decl "state" alaris_th
     nil)
    (tick_case_infuse_infusionrateEQvtbi_notkvoflag const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_kvoflag const-decl "state"
     alaris_th nil)
    (tick const-decl "state" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (per_release_fdown const-decl "boolean" alaris_th nil)
    (release_fdown const-decl "state" alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (state_DN_rate const-decl "irates" alaris_th nil)
    (fdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (fdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (fdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fdown_case_options const-decl "state" alaris_th nil)
    (fdown const-decl "state" alaris_th nil)
    (per_release_sdown const-decl "boolean" alaris_th nil)
    (release_sdown const-decl "state" alaris_th nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (ceil_rate const-decl "irates" alaris_th nil)
    (state_dn_rate const-decl "irates" alaris_th nil)
    (sdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (sdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (sdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (sdown_case_options const-decl "state" alaris_th nil)
    (sdown const-decl "state" alaris_th nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (per_release_fup const-decl "boolean" alaris_th nil)
    (release_fup const-decl "state" alaris_th nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (per_fup const-decl "bool" alaris_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (state_UP_rate const-decl "irates" alaris_th nil)
    (fup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (fup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (fup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fup_case_options const-decl "state" alaris_th nil)
    (fup const-decl "state" alaris_th nil)
    (per_release_chevron const-decl "boolean" alaris_th nil)
    (per_release_sup const-decl "boolean" alaris_th nil)
    (release_key const-decl "state" alaris_th nil)
    (release_sup const-decl "state" alaris_th nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (decrement const-decl "presstime" alaris_th nil)
    (trim_rate const-decl "irates" alaris_th nil)
    (state_up_rate const-decl "irates" alaris_th nil)
    (aug_rate const-decl "pump" pump_th nil)
    (sup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (sup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (sup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (sup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (sup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (sup_case_options const-decl "state" alaris_th nil)
    (sup const-decl "state" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (state_transitions const-decl "boolean" alaris_consistency_pattern
     nil))
   shostak))
 (f1ok_consistent_theorem 0
  (f1ok_consistent_theorem-1 nil 3689663589
   ("" (skosimp*)
    (("" (split)
      (("1" (grind) nil nil)
       ("2" (expand "state_transitions")
        (("2" (flatten)
          (("2" (split)
            (("1" (grind) nil nil) ("2" (grind) nil nil)
             ("3" (grind) nil nil) ("4" (grind) nil nil)
             ("5" (grind) nil nil) ("6" (grind) nil nil)
             ("7" (grind) nil nil) ("8" (grind) nil nil)
             ("9" (grind) nil nil) ("10" (grind) nil nil)
             ("11" (grind) nil nil) ("12" (grind) nil nil)
             ("13" (grind) nil nil) ("14" (grind) nil nil)
             ("15" (grind) nil nil) ("16" (grind) nil nil)
             ("17" (grind) nil nil) ("18" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((f1ok_consistent const-decl "boolean" alaris_consistency_pattern
     nil)
    (f1ok_invariant const-decl "boolean" alaris_consistency_pattern
     nil)
    (/= const-decl "boolean" notequal nil)
    (f1ok_invariant_guard const-decl "boolean"
     alaris_consistency_pattern nil)
    (init? const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (per_fit_set const-decl "boolean" alaris_th nil)
    (fit_to_hold const-decl "state" alaris_th nil)
    (connect_set const-decl "pump" pump_th nil)
    (fit_set const-decl "state" alaris_th nil)
    (per_switch const-decl "boolean" alaris_th nil)
    (mains_switch const-decl "pump" pump_th nil)
    (switch_battery_low const-decl "state" alaris_th nil)
    (switch_from_battery_low const-decl "state" alaris_th nil)
    (switch const-decl "state" alaris_th nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (pause const-decl "pump" pump_th nil)
    (pause const-decl "state" alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (run_cond_NZ const-decl "state" alaris_th nil)
    (run_check_rlock const-decl "state" alaris_th nil)
    (run_cond_vtbi0_kvoflag const-decl "state" alaris_th nil)
    (run_cond_vtbi0_NOTkvoflag const-decl "state" alaris_th nil)
    (run_cond_setnotfitted const-decl "state" alaris_th nil)
    (run const-decl "state" alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (on const-decl "pump" pump_th nil)
    (on_case_infusionstatusblank const-decl "state" alaris_th nil)
    (on_case_infusionstatusNOTblank const-decl "state" alaris_th nil)
    (on const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (query const-decl "state" alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2 const-decl "state" alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key1 const-decl "state" alaris_th nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (per_tick const-decl "boolean" pump_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (tick_case_infuse_and_infusionrateLvtbi const-decl "pump" pump_th
     nil)
    (tick_case_infuse_and_infusionrateGEvtbi_NOTkvoflag const-decl
     "pump" pump_th nil)
    (tick_case_infuse_and_infusionrateGEvtbi_kvoflag const-decl "pump"
     pump_th nil)
    (tick const-decl "pump" pump_th nil)
    (tick_case_battery_warning const-decl "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQtimeout const-decl "state"
     alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQshorttimeout const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeoutlocked const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeout const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbilocked const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbi const-decl "state" alaris_th
     nil)
    (tick_case_infuse_infusionrateEQvtbi_notkvoflag const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_kvoflag const-decl "state"
     alaris_th nil)
    (tick const-decl "state" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (per_release_fdown const-decl "boolean" alaris_th nil)
    (release_fdown const-decl "state" alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (state_DN_rate const-decl "irates" alaris_th nil)
    (fdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (fdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (fdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fdown_case_options const-decl "state" alaris_th nil)
    (fdown const-decl "state" alaris_th nil)
    (per_release_sdown const-decl "boolean" alaris_th nil)
    (release_sdown const-decl "state" alaris_th nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (ceil_rate const-decl "irates" alaris_th nil)
    (state_dn_rate const-decl "irates" alaris_th nil)
    (sdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (sdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (sdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (sdown_case_options const-decl "state" alaris_th nil)
    (sdown const-decl "state" alaris_th nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (per_release_fup const-decl "boolean" alaris_th nil)
    (release_fup const-decl "state" alaris_th nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (per_fup const-decl "bool" alaris_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (state_UP_rate const-decl "irates" alaris_th nil)
    (fup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (fup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (fup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fup_case_options const-decl "state" alaris_th nil)
    (fup const-decl "state" alaris_th nil)
    (per_release_chevron const-decl "boolean" alaris_th nil)
    (per_release_sup const-decl "boolean" alaris_th nil)
    (release_key const-decl "state" alaris_th nil)
    (release_sup const-decl "state" alaris_th nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (decrement const-decl "presstime" alaris_th nil)
    (trim_rate const-decl "irates" alaris_th nil)
    (state_up_rate const-decl "irates" alaris_th nil)
    (aug_rate const-decl "pump" pump_th nil)
    (sup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (sup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (sup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (sup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (sup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (sup_case_options const-decl "state" alaris_th nil)
    (sup const-decl "state" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (state_transitions const-decl "boolean" alaris_consistency_pattern
     nil))
   shostak))
 (alwayskey1_consistent_theorem 0
  (alwayskey1_consistent_theorem-1 nil 3689664043
   ("" (skosimp*)
    (("" (split)
      (("1" (grind) nil nil)
       ("2" (expand "state_transitions")
        (("2" (flatten)
          (("2" (split)
            (("1" (grind) nil nil) ("2" (grind) nil nil)
             ("3" (grind) nil nil) ("4" (grind) nil nil)
             ("5" (grind) nil nil) ("6" (grind) nil nil)
             ("7" (grind) nil nil) ("8" (grind) nil nil)
             ("9" (grind) nil nil) ("10" (grind) nil nil)
             ("11" (grind) nil nil) ("12" (grind) nil nil)
             ("13" (grind) nil nil) ("14" (grind) nil nil)
             ("15" (grind) nil nil) ("16" (grind) nil nil)
             ("17" (grind) nil nil) ("18" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((alwayskey1_consistent const-decl "boolean"
     alaris_consistency_pattern nil)
    (f1ok_invariant const-decl "boolean" alaris_consistency_pattern
     nil)
    (/= const-decl "boolean" notequal nil)
    (alwayskey1_invariant_guard const-decl "boolean"
     alaris_consistency_pattern nil)
    (init? const-decl "bool" alaris_th nil)
    (maxpress const-decl "nat" types_and_constants_th nil)
    (small_step const-decl "real" types_and_constants_th nil)
    (dlock const-decl "nat" types_and_constants_th nil)
    (midbag const-decl "nat" types_and_constants_th nil)
    (dnewtime const-decl "nat" types_and_constants_th nil)
    (dnewrate const-decl "nat" types_and_constants_th nil)
    (dnewvtbi const-decl "nat" types_and_constants_th nil)
    (dquery const-decl "nat" types_and_constants_th nil)
    (dkvorate const-decl "nat" types_and_constants_th nil)
    (dbags const-decl "nat" types_and_constants_th nil)
    (dvol const-decl "nat" types_and_constants_th nil)
    (dtime const-decl "nat" types_and_constants_th nil)
    (dvtbi const-decl "nat" types_and_constants_th nil)
    (drate const-decl "nat" types_and_constants_th nil)
    (init? const-decl "bool" pump_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" alaris_consistency_pattern nil)
    (maxinfuse formal-const-decl "posnat" alaris_consistency_pattern
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (infusemin formal-const-decl
     "{infusemin: posreal | infusemin <= maxinfuse}"
     alaris_consistency_pattern nil)
    (timeout formal-const-decl "posnat" alaris_consistency_pattern nil)
    (< const-decl "bool" reals nil)
    (shorttimeout formal-const-decl
     "{shorttimeout: posnat | shorttimeout < timeout}"
     alaris_consistency_pattern nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}"
     alaris_consistency_pattern nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bat_max formal-const-decl
     "{bat_max: posnat | bat_max + 1 < maxtime}"
     alaris_consistency_pattern nil)
    (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}"
     alaris_consistency_pattern nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (per_fit_set const-decl "boolean" alaris_th nil)
    (fit_to_hold const-decl "state" alaris_th nil)
    (connect_set const-decl "pump" pump_th nil)
    (fit_set const-decl "state" alaris_th nil)
    (per_switch const-decl "boolean" alaris_th nil)
    (mains_switch const-decl "pump" pump_th nil)
    (switch_battery_low const-decl "state" alaris_th nil)
    (switch_from_battery_low const-decl "state" alaris_th nil)
    (switch const-decl "state" alaris_th nil)
    (per_pause const-decl "bool" pump_th nil)
    (per_pause const-decl "bool" alaris_th nil)
    (pause const-decl "pump" pump_th nil)
    (pause const-decl "state" alaris_th nil)
    (per_run const-decl "bool" alaris_th nil)
    (run_cond_NZ const-decl "state" alaris_th nil)
    (run_check_rlock const-decl "state" alaris_th nil)
    (run_cond_vtbi0_kvoflag const-decl "state" alaris_th nil)
    (run_cond_vtbi0_NOTkvoflag const-decl "state" alaris_th nil)
    (run_cond_setnotfitted const-decl "state" alaris_th nil)
    (run const-decl "state" alaris_th nil)
    (per_on const-decl "bool" alaris_th nil)
    (on const-decl "pump" pump_th nil)
    (on_case_infusionstatusblank const-decl "state" alaris_th nil)
    (on_case_infusionstatusNOTblank const-decl "state" alaris_th nil)
    (on const-decl "state" alaris_th nil)
    (per_query const-decl "bool" alaris_th nil)
    (query const-decl "state" alaris_th nil)
    (per_key3 const-decl "bool" alaris_th nil)
    (key3_case_attention_clearsetup const-decl "state" alaris_th nil)
    (key3_case_battery_low const-decl "state" alaris_th nil)
    (key3_case_infuse const-decl "state" alaris_th nil)
    (key3_case_volume const-decl "state" alaris_th nil)
    (key3_case_vtbidone const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key3_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key3_case_setvtbi_rate_notfitted const-decl "state" alaris_th nil)
    (key3_case_optionsORdispinfo const-decl "state" alaris_th nil)
    (key3_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key3_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key3 const-decl "state" alaris_th nil)
    (per_key2 const-decl "bool" alaris_th nil)
    (key2_case_holding_infusing const-decl "state" alaris_th nil)
    (clearVolumeinfused const-decl "pump" pump_th nil)
    (key2_case_volume const-decl "state" alaris_th nil)
    (key2_case_dispvtbiORvtbitime const-decl "state" alaris_th nil)
    (key2 const-decl "state" alaris_th nil)
    (per_key1 const-decl "bool" alaris_th nil)
    (key1_case_holdinginfusingdispkvo const-decl "state" alaris_th nil)
    (reset const-decl "pump" pump_th nil)
    (key1_case_clearsetup const-decl "state" alaris_th nil)
    (per_start const-decl "bool" pump_th nil)
    (start const-decl "pump" pump_th nil)
    (key1_case_infuselocked const-decl "state" alaris_th nil)
    (aug_vtbi const-decl "pump" pump_th nil)
    (key1_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (key1_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (key1_case_options_dlock const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbi const-decl "state" alaris_th nil)
    (key1_case_options_dsetvtbilocked const-decl "state" alaris_th nil)
    (key1_case_options_ddisablerate const-decl "state" alaris_th nil)
    (key1_case_options_ddosing_dsetup_dadjustav_dpdtls const-decl
     "state" alaris_th nil)
    (key1_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (key1_case_vtbitime_vttmode_vtbiZ const-decl "state" alaris_th nil)
    (modvtbitime const-decl "pump" pump_th nil)
    (key1_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (key1 const-decl "state" alaris_th nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (per_tick const-decl "boolean" pump_th nil)
    (per_tick const-decl "bool" alaris_th nil)
    (tick_case_infuse_and_infusionrateLvtbi const-decl "pump" pump_th
     nil)
    (tick_case_infuse_and_infusionrateGEvtbi_NOTkvoflag const-decl
     "pump" pump_th nil)
    (tick_case_infuse_and_infusionrateGEvtbi_kvoflag const-decl "pump"
     pump_th nil)
    (tick const-decl "pump" pump_th nil)
    (tick_case_battery_warning const-decl "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQtimeout const-decl "state"
     alaris_th nil)
    (tick_case_holding_volume_etc_elapseEQshorttimeout const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeoutlocked const-decl
     "state" alaris_th nil)
    (tick_case_holding_volume_etc_elapseLTtimeout const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbilocked const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateLTvtbi const-decl "state" alaris_th
     nil)
    (tick_case_infuse_infusionrateEQvtbi_notkvoflag const-decl "state"
     alaris_th nil)
    (tick_case_infuse_infusionrateEQvtbi_kvoflag const-decl "state"
     alaris_th nil)
    (tick const-decl "state" alaris_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (per_release_fdown const-decl "boolean" alaris_th nil)
    (release_fdown const-decl "state" alaris_th nil)
    (per_fdown const-decl "bool" alaris_th nil)
    (state_DN_rate const-decl "irates" alaris_th nil)
    (fdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (state_DN_vtbi const-decl "ivols" alaris_th nil)
    (fdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_DN_time const-decl "itimes" alaris_th nil)
    (fdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fdown_case_options const-decl "state" alaris_th nil)
    (fdown const-decl "state" alaris_th nil)
    (per_release_sdown const-decl "boolean" alaris_th nil)
    (release_sdown const-decl "state" alaris_th nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (per_sdown const-decl "bool" alaris_th nil)
    (ceil_rate const-decl "irates" alaris_th nil)
    (state_dn_rate const-decl "irates" alaris_th nil)
    (sdown_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (sdown_case_infusingORholding_rlock const-decl "state" alaris_th
     nil)
    (ceil_vtbi const-decl "ivols" alaris_th nil)
    (state_dn_vtbi const-decl "ivols" alaris_th nil)
    (sdown_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sdown_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_dn_time const-decl "itimes" alaris_th nil)
    (sdown_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sdown_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (dpdtls const-decl "nat" types_and_constants_th nil)
    (sdown_case_options const-decl "state" alaris_th nil)
    (sdown const-decl "state" alaris_th nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (per_release_fup const-decl "boolean" alaris_th nil)
    (release_fup const-decl "state" alaris_th nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (per_fup const-decl "bool" alaris_th nil)
    (fractional const-decl "{x | 0 <= x & x < 1}" floor_ceil nil)
    (big_step const-decl "real" types_and_constants_th nil)
    (state_UP_rate const-decl "irates" alaris_th nil)
    (fup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (fup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (state_UP_vtbi const-decl "ivols" alaris_th nil)
    (fup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (fup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (state_UP_time const-decl "itimes" alaris_th nil)
    (fup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (fup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (fup_case_options const-decl "state" alaris_th nil)
    (fup const-decl "state" alaris_th nil)
    (per_release_chevron const-decl "boolean" alaris_th nil)
    (per_release_sup const-decl "boolean" alaris_th nil)
    (release_key const-decl "state" alaris_th nil)
    (release_sup const-decl "state" alaris_th nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (no_button_down const-decl "bool" alaris_th nil)
    (per_chevron const-decl "bool" alaris_th nil)
    (per_sup const-decl "bool" alaris_th nil)
    (decrement const-decl "presstime" alaris_th nil)
    (trim_rate const-decl "irates" alaris_th nil)
    (state_up_rate const-decl "irates" alaris_th nil)
    (aug_rate const-decl "pump" pump_th nil)
    (sup_case_holding_NOTrlock const-decl "state" alaris_th nil)
    (sup_case_infusing_NOTrlock const-decl "state" alaris_th nil)
    (resetElapsed const-decl "pump" pump_th nil)
    (sup_case_infusingORholding_rlock const-decl "state" alaris_th nil)
    (trim_vtbi const-decl "ivols" alaris_th nil)
    (state_up_vtbi const-decl "ivols" alaris_th nil)
    (sup_case_dispvtbi_vtmode const-decl "state" alaris_th nil)
    (sup_case_vtbitime_vttmode const-decl "state" alaris_th nil)
    (trim_time const-decl "itimes" alaris_th nil)
    (state_up_time const-decl "itimes" alaris_th nil)
    (sup_case_vtbitime_ttmode const-decl "state" alaris_th nil)
    (mbags const-decl "nat" types_and_constants_th nil)
    (sup_case_dispvtbi_bagmode const-decl "state" alaris_th nil)
    (sup_case_dispvtbi_tbagmode const-decl "state" alaris_th nil)
    (sup_case_options const-decl "state" alaris_th nil)
    (sup const-decl "state" alaris_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (state_transitions const-decl "boolean" alaris_consistency_pattern
     nil))
   shostak)))

